// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: tweets.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createTweet = `-- name: CreateTweet :one
INSERT INTO Tweets(id, created_at, updated_at, user_id ,body )
VALUES (
    gen_random_uuid(),
    NOW(),
    NOW(),
    $1,
    $2
)
RETURNING id, created_at, updated_at, body, user_id
`

type CreateTweetParams struct {
	UserID uuid.NullUUID
	Body   string
}

func (q *Queries) CreateTweet(ctx context.Context, arg CreateTweetParams) (Tweet, error) {
	row := q.db.QueryRowContext(ctx, createTweet, arg.UserID, arg.Body)
	var i Tweet
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Body,
		&i.UserID,
	)
	return i, err
}

const resetTweets = `-- name: ResetTweets :exec
DELETE from  Tweets
`

func (q *Queries) ResetTweets(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, resetTweets)
	return err
}
